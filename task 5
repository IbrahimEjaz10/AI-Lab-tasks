def dfs(graph, start):
    stack = [start]
    visited = []

    while stack:
        node = stack.pop()
        if node not in visited:
            visited.append(node)
            stack.extend(reversed(graph[node]))
            print(node, end=' ')

graph = {
    '1' : ['2','3'],
    '2' : ['4'],
    '3' : ['4','7'],
    '4' : ['5','6'],
    '5' : [],
    '6' : [],
    '7' : []
}

dfs(graph, '1')
1 2 4 5 6 3 7 
Inorder, Preorder, and Postorder are tree traversal techniques used in Depth-First Search (DFS) for trees.

Preorder (Root → Left → Right): Visit the root first, then the left subtree, and finally the right subtree.
Inorder (Left → Root → Right): Visit the left subtree first, then the root, and finally the right subtree.
Postorder (Left → Right → Root): Visit the left subtree first, then the right subtree, and finally the root.
